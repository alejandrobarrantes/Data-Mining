title = "Correlación entre las variables de la tabla Ejemplos de Recomendacion")
corrplot(matriz.cor,
method = "ellipse",
title = "Correlación entre las variables de la tabla Ejemplos de Recomendacion")
boxplot(datos,
col = color[1],
outcol = "black",
outpch = 19,
main = "Valores atípicos para la tabla de datos iris")
boxplot(datos[,-1],
col = color[1],
outcol = "black",
outpch = 19,
main = "Valores atípicos para la tabla de datos iris")
boxplot(datos[,-1],
outcol = "black",
outpch = 19,
main = "Valores atípicos para la tabla de datos Ejemplos de Recomendacion")
library(scatterplot3d)
scatterplot3d(x=datos$VelocidadEntrega,y=datos$Precio, z=datos$Durabilidad)
ggplot(as.matrix(x))
x
ggplot(as.numeric(x))
ggplot(as.data.frame(as.numeric(x)))
ggplot(data=as.data.frame(as.numeric(x)))
ggplot(data=x)
as.data.frame(as.numeric(x))
ggplot(data=as.data.frame(as.numeric(x)))
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
data <- read.csv("DJTable.csv", header = TRUE,
sep = ";", dec = ",", row.names = 1)
ibm<-data[,"IBM"]
csco<-data[,"CSCO"]
intc<-data[,"INTC"]
msft<-data[,"MSFT"]
x<-c(ibm,csco,intc,msft)
plot(main="Valor de las Acciones",x,col=c("red","blue"))
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=as.data.frame(as.numeric(x))) +
geom_point(mapping = aes(x = x$ , y = Sepal.Width))
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
data <- read.csv("DJTable.csv", header = TRUE,
sep = ";", dec = ",", row.names = 1)
ibm<-data[,"IBM"]
csco<-data[,"CSCO"]
intc<-data[,"INTC"]
msft<-data[,"MSFT"]
x<-as.data.frame("ibm"=ibm,"csco"=csco,"intc"=intc,"msft"=msft)
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=as.data.frame(as.numeric(x))) +
geom_point(mapping = aes(x = x$ibm , y = x$csco))
ggplot(data=as.data.frame(as.numeric(x)))
ggplot(data=as.data.frame(as.numeric(x)))
ggplot(data=as.data.frame((x)))
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
data <- read.csv("DJTable.csv", header = TRUE,
sep = ";", dec = ",", row.names = 1)
ibm<-data[,"IBM"]
csco<-data[,"CSCO"]
intc<-data[,"INTC"]
msft<-data[,"MSFT"]
x<-c(ibm,csco,intc,msft)
plot(main="Valor de las Acciones",x,col=c("red","blue"))
x
ibm<-data[c("IBM","CSCO")]
ibm
ibm<-data[c("IBM","CSCO","INTC","MSFT")]
ibm<-data[c("IBM","CSCO","INTC")]
ibm<-data[c("IBM","CSCO")]
ibm
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
data <- read.csv("DJTable.csv", header = TRUE,
sep = ";", dec = ",", row.names = 1)
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
data <- read.csv("DJTable.csv", header = TRUE,
sep = ";", dec = ",", row.names = 1)
ibm<-data[c("IBM","CSCO")]
ibm
x<-c(ibm,csco,intc,msft)
plot(main="Valor de las Acciones",x,col=c("red","blue"))
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
data <- read.csv("DJTable.csv", header = TRUE,
sep = ";", dec = ",", row.names = 1)
ibm<-data[c("IBM","CSCO")]
ibm
#x<-c(ibm,csco,intc,msft)
#plot(main="Valor de las Acciones",x,col=c("red","blue"))
]
ibm<-data[c("IBM","CSCO")]
ibm
print(ibm)
ibm<-data[c("IBM","CSCO","INTC")]
ibm<-data[c("IBM","CSCO","INTC")]
print(ibm)
ibm<-data[c("IBM","CSCO","INTC","MSFT")]
print(ibm)
x<-data[c("IBM","CSCO","INTC","MSFT")]
plot(main="Valor de las Acciones",x,col=c("red","blue"))
plot(main="Valor de las Acciones",x)
plot(main="Valor de las Acciones",x,col=c("red","blue"))
#install.packages("ggplot2")
library(ggplot2)
ggplot(data=as.data.frame((x)))
ggplot(data=((x)))
ggplot(data=((x)))
ggplot2(data=((x)))
ggplot(data=x) +
geom_point(mapping = aes( color = Species))
ggplot(data=x) +
geom_point(mapping = aes(x = x$IBM , y = x$CSCO, color = Species))
ggplot(data=x) +
geom_point(mapping = aes(x = x$IBM , y = x$CSCO))
ggplot()
ggplot(data=x) +
geom_point(mapping = aes(x = x$IBM , y = x$CSCO))
y<-data[,1]
y
y<-data[1]
y
y<-data[0]
y
ggplot(data=x) +
geom_point(mapping = aes(x = y , y = x))
ggplot(data=x) +
geom_point(mapping = aes(x = x , y = y))
ggplot(data=x) +
geom_point(mapping = aes( y = y))
y
x<-data[c("IBM","CSCO","INTC","MSFT")]
y<-data[0]
plot(main="Valor de las Acciones",x,col=c("red","blue"))
ggplot(data=x) +
geom_point(mapping = aes(x=x, y = x))
ggplot(data=x) +
geom_point(mapping = aes(x="Valor", y = "annio"))
ggplot(data=x, mapping = aes(x="Valor", y = "annio")) +
geom_point(mapping = aes(x="Valor", y = "annio"))
ggplot(data=x, mapping = aes(x="Valor", y = "annio"))
ggplot(data=x, mapping = aes(x="Valor", y = "annio")) +geom_point()
x<-data[c(0,"IBM","CSCO","INTC","MSFT")]
x<-data[c("", "IBM","CSCO","INTC","MSFT")]
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
data <- read.csv("DJTable.csv", header = TRUE,
sep = ";", dec = ",", row.names = 1)
x<-data[c("IBM","CSCO","INTC","MSFT")]
y<-data[0]
y
#x<-c(ibm,csco,intc,msft)
plot(main="Valor de las Acciones",x,col=c("red","blue"))
x
ggplot(data=x, mapping = aes(x=x[0], y = "annio")) +geom_point()
ggplot(data=x, mapping = aes(x=x[0], y = x[0])) +geom_point()
ggplot(data=x, mapping = aes(x=x[0], y = c(0:152))) +geom_point()
ggplot(data=x, mapping = aes(x=x[0], y = c(0:252))) +geom_point()
ggplot(data=x, mapping = aes(x=x[0], y = c(0:251))) +geom_point()
ggplot(data=x, mapping = aes(x=x[0], y = c(0:250))) +geom_point()
ggplot(data=x, mapping = aes(x=x[0])) +geom_point()
ggplot(data=x, mapping = x[0]) +geom_point()
ggplot(data=x)
library("FactoMineR")
library("factoextra")
library("cluster")
library("fmsb")
library(tidyverse)
library(dendextend)
library(patchwork)
color <- c("red","blue")
color2 <- c("#FF6449", "#FEB035", "#FCE020", "#F7EC69", "#F1F8BE","#D5B9F6",
"#A2E3CD","#EDF380", "#D8FD9C", "#AEEC64", "#F598F8", "#9EFF37")
color3 <- c("#FF6449", "#FEB035", "#FCE020", "#F7EC69", "#F1F8BE","#D5B9F6",
"#A2E3CD","#EDF380", "#D8FD9C", "#AEEC64", "#F598F8", "#9EFF37")
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 4/DatosTarea")
Datos <- read.table("EjemploAlgoritmosRecomendacion.csv", header=TRUE, sep=';',dec=',',row.names=1)
#A
str(Datos)
mis.datos <- scale(Datos)
grupos <- kmeans(x = mis.datos, centers = 4, iter.max = 200, nstart = 100)
# Verificación del Teorema de Fisher
grupos$totss==grupos$tot.withinss+grupos$betweenss
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nboot = 50, nstart = 100, iter.max = 200) +
ggtitle("Gap Statistic")
#asociar a los emtodos de arriba
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=1,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,1),cex.names = 0.7)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,1),cex.names = 0.7)
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nboot = 50, nstart = 100, iter.max = 200) +
ggtitle("Gap Statistic")
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nboot = 50, nstart = 100, iter.max = 300) +
ggtitle("Gap Statistic")
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nstart = 100, iter.max = 300) +
ggtitle("Gap Statistic")
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nstart = 200, iter.max = 300) +
ggtitle("Gap Statistic")
# WSS
fviz_nbclust(mis.datos, kmeans, method = "wss", nstart = 100, iter.max = 200) +
ggtitle("Within-Cluster Sum of Squares")
mis.datos <- (Datos)
grupos <- kmeans(x = mis.datos, centers = 4, iter.max = 200, nstart = 100)
# Verificación del Teorema de Fisher
grupos$totss==grupos$tot.withinss+grupos$betweenss
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nstart = 200, iter.max = 300) +
ggtitle("Gap Statistic")
#asociar a los emtodos de arriba
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=1,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,1),cex.names = 0.7)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,4),cex.names = 0.7)
Datos <- read.table("EjemploAlgoritmosRecomendacion.csv", header=TRUE, sep=';',dec=',',row.names=1)
#A
str(Datos)
mis.datos <- (Datos)
grupos <- kmeans(x = mis.datos, centers = 4, iter.max = 200, nstart = 100)
# Verificación del Teorema de Fisher
grupos$totss==grupos$tot.withinss+grupos$betweenss
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nstart = 100, iter.max = 200) +
ggtitle("Gap Statistic")
#asociar a los emtodos de arriba
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=1,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,4),cex.names = 0.7)
# Teresa y Marisol Cluster 1
# Leo y Susana Cluster 2
# Justin y Maura Cluster 6
grupos<-kmeans(mis.datos,centers=7,iter.max=200,nstart=100)
str(Datos)
datos.escalado <- data.frame(scale(Datos), grupos$cluster)
clusplot(datos.escalado, grupos$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
Datos <- read.table("EjemploAlgoritmosRecomendacion.csv", header=TRUE, sep=';',dec=',',row.names=1)
str(Datos)
str(Datos)
mis.datos <- (Datos)
grupos <- kmeans(x = mis.datos, centers = 4, iter.max = 200, nstart = 100)
# Verificación del Teorema de Fisher
grupos$totss==grupos$tot.withinss+grupos$betweenss
fviz_nbclust(mis.datos, kmeans, method = "gap_stat", nstart = 100, iter.max = 200) +
ggtitle("Gap Statistic")
#asociar a los emtodos de arriba
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=1,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,4),cex.names = 0.7)
# WSS
fviz_nbclust(mis.datos, kmeans, method = "wss", nstart = 100, iter.max = 200) +
ggtitle("Within-Cluster Sum of Squares")
# WSS
fviz_nbclust(mis.datos, kmeans, method = "wss", nstart = 100, iter.max = 200) +
ggtitle("Within-Cluster Sum of Squares")
mis.datos <- scale(Datos)
# WSS
fviz_nbclust(mis.datos, kmeans, method = "wss", nstart = 100, iter.max = 200) +
ggtitle("Within-Cluster Sum of Squares")
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1","Cluster 2")
centros<-as.data.frame(centros)
#asociar a los emtodos de arriba
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=2,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1","Cluster 2")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,1),cex.names = 0.7)
# WSS
fviz_nbclust(mis.datos, kmeans, method = "wss", nstart = 100, iter.max = 200) +
ggtitle("Within-Cluster Sum of Squares")
#asociar a los emtodos de arriba
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=2,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1","Cluster 2")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,1),cex.names = 0.7)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,1),cex.names = 0.7)
# Silhouette Listo!
fviz_nbclust(mis.datos, kmeans, method = "silhouette", nstart = 100, iter.max = 200) +
ggtitle("Average Silhouette")
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=3,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1","Cluster 2","Cluster 3")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color2,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2","Cluster 3"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color2)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1.5,1.5),cex.names = 0.7)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1.5,1.5),cex.names = 0.7)
# Grafico de barras
barplot(t(grupos$centers),beside=FALSE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,4),cex.names = 0.7)
# Grafico de barras
barplot(t(grupos$centers),beside=FALSE,main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,4),cex.names = 0.7)
# WSS
fviz_nbclust(mis.datos, kmeans, method = "wss", nstart = 100, iter.max = 200) +
ggtitle("Within-Cluster Sum of Squares")
#asociar a los emtodos de arriba
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=2,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1","Cluster 2")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1,1),cex.names = 0.7)
# Silhouette Listo!
fviz_nbclust(mis.datos, kmeans, method = "silhouette", nstart = 100, iter.max = 200) +
ggtitle("Average Silhouette")
# Sacando Grupos
grupos<-kmeans(mis.datos,centers=3,iter.max=200,nstart=100)
# Centros
centros<-grupos$centers
# Gráfico Tipo Araña
rownames(centros)<-c("Cluster 1","Cluster 2","Cluster 3")
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-as.data.frame(centros)
maximos<-apply(centros,2,max)
minimos<-apply(centros,2,min)
centros<-rbind(minimos,centros)
centros<-rbind(maximos,centros)
radarchart(as.data.frame(centros),maxmin=TRUE,axistype=4,axislabcol="slategray4",
centerzero=FALSE,seg=8, cglcol="gray67",
pcol=color2,plty=1,plwd=5,title="Comparación de clústeres")
legenda <-legend(1.5,1, legend=c("Cluster 1","Cluster 2","Cluster 3"),
seg.len=-1.4,title="Clústeres",pch=21,bty="n" ,lwd=3, y.intersp=1,
horiz=FALSE,col=color2)
# Grafico de barras
barplot(t(grupos$centers),beside=TRUE,legend=colnames(datos),main = "Gráfico de Interpretación de Clases",col=color2,ylim=c(-1.5,1.5),cex.names = 0.7)
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 5")
Datos <- read.csv('DatosBeijing.csv', header=TRUE, sep=',',dec='.',row.names=1)
str(Datos)
summary(Datos)
dim(Datos)
#b) Elimine las filas con NA usando el comando na.omit(...). ¿Cu´antas filas de eliminaron?
Datos.sin.na<-na.omit(Datos)
#Se eliminaron:
nrow(Datos)-nrow(Datos.sin.na)
#c) Elimine de la tabla de datos la variable DireccionViento. ¿Por que se debe eliminar?
Datos.sin.na <- subset(Datos.sin.na, select = -DireccionViento)
str(Datos.sin.na)
generate <- function(n=50, extradim=0, sigma=1, mu=7) {
data1 <- matrix(rnorm(n*2), n, 2) * sigma
data1[,1] <- data1[,1] + centers[1,1] * mu
data1[,2] <- data1[,2] + centers[1,2] * mu
data2 <- matrix(rnorm(n*2), n, 2) * sigma
data2[,1] <- data2[,1] + centers[2,1] * mu
data2[,2] <- data2[,2] + centers[2,2] * mu
data3 <- matrix(rnorm(n*2), n, 2) * sigma
data3[,1] <- data3[,1] + centers[3,1] * mu
data3[,2] <- data3[,2] + centers[3,2] * mu
data <- rbind(data1,data2,data3)
if (extradim > 0) {
noise <- matrix(rnorm(3*n*extradim)*sigma, 3*n, extradim)
data <- cbind(data, noise)
}
return(data)
}
Datos.sin.na <- generate(extradim=0)
#g) Construya el Codo de Jambu usando iter.max=100 y nstart=5,
#¿cu´antos conglomerados (cl´usteres) sugiere el codo?
centers <- matrix(c(0,3,1,3,0,4), 3, 2, byrow=T)
generate <- function(n=50, extradim=0, sigma=1, mu=7) {
data1 <- matrix(rnorm(n*2), n, 2) * sigma
data1[,1] <- data1[,1] + centers[1,1] * mu
data1[,2] <- data1[,2] + centers[1,2] * mu
data2 <- matrix(rnorm(n*2), n, 2) * sigma
data2[,1] <- data2[,1] + centers[2,1] * mu
data2[,2] <- data2[,2] + centers[2,2] * mu
data3 <- matrix(rnorm(n*2), n, 2) * sigma
data3[,1] <- data3[,1] + centers[3,1] * mu
data3[,2] <- data3[,2] + centers[3,2] * mu
data <- rbind(data1,data2,data3)
if (extradim > 0) {
noise <- matrix(rnorm(3*n*extradim)*sigma, 3*n, extradim)
data <- cbind(data, noise)
}
return(data)
}
Datos.sin.na <- generate(extradim=0)
InerciaIC<-rep(0,30)
for(k in 1:30) {
grupos<-kmeans(Datos.sin.na,centers=k,iter.max = 100,nstart=5)
InerciaIC[k]<-grupos$tot.withinss
}
plot(InerciaIC,col="blue",type="b")
#Utilice tambi´en el m´etodo silhouette de la funci´on
#fviz nbclust, ¿cu´antos conglomerados (cl´usteres) sugiere este m´etodo?
mis.datos <- scale(Datos.sin.na)
fviz_nbclust(mis.datos[1:2000,], kmeans, method = "silhouette",nstart = 100, iter.max = 5)
mis.datos
fviz_nbclust(mis.datos, kmeans, method = "silhouette",nstart = 100, iter.max = 5)
