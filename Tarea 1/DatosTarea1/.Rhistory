c(x=Datos[,1],y=Datos[,2])
#Ejecute un “summary” y un “str” de los datos.
summary(Datos)
str(Datos)
#Calcule la Media y la Desviaci´on Est´andar para todas las variables cualesquiera
colMeans(Datos)
apply(Datos, 2, sd)
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
Datos <- read.table('EjemploAlgoritmosRecomendacion.csv',
header=TRUE, sep=';',dec=',',row.names=1)
#Calcule la dimensi´on de la Tabla de Datos
dim(Datos)
#Despliegue las primeras 2 columnas de la tabla de datos.
c(Datos[,1],Datos[,2])
#Ejecute un “summary” y un “str” de los datos.
summary(Datos)
str(Datos)
#Calcule la Media y la Desviaci´on Est´andar para todas las variables cualesquiera
colMeans(Datos)
apply(Datos, 2, sd)
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
Datos <- read.table('SAheart.csv',header=TRUE, sep=';',dec=',')
dim(Datos)
Datos[1:3]
summary(Datos)
str(Datos)
cor(as.numeric(Datos$tobacco),as.numeric(Datos$alcohol))
colSums(as.numeric(Datos))
colSums(as.numeric(Datos))
cor(as.numeric(Datos$tobacco),as.numeric(Datos$alcohol))
colSums(as.numeric(Datos))
sapply(Datos, is.numeric)
colSums(Datos[, numeric_cols])
cuantitativas<-sapply(Datos, is.numeric)
colSums(Datos[, cuantitativas])
cuantitativas<-(is.numeric(Datos))
colSums(Datos[, cuantitativas])
cuantitativas<-(as.numeric(Datos))
colSums(Datos[, cuantitativas])
sapply
cuantitativas<-sapply(Datos, is.numeric)
colSums(Datos[, cuantitativas])
ejercicio_13 <- function() {
#genera 200 numeros entre 1 y 500
numeros <- sample(1:500, 200, replace = TRUE)
cantidad <- sum(numeros >= 50 & numeros <= 450)
return(cantidad)
}
# Llamamos a la funcion
ejercicio_13()
ejercicio_13 <- function() {
#genera 200 numeros entre 1 y 500
numeros <- sample(1:500, 200, replace = TRUE)
cantidad <- sum(numeros >= 50 & numeros <= 450)
return(cantidad)
}
# Llamamos a la funcion
ejercicio_13()
ejercicio_13 <- function() {
#genera 200 numeros entre 1 y 500
numeros <- sample(1:500, 200, replace = TRUE)
cantidad <- sum(numeros >= 50 & numeros <= 450)
return(cantidad)
}
# Llamamos a la funcion
ejercicio_13()
ejercicio_13 <- function() {
#genera 200 numeros entre 1 y 500
numeros <- sample(1:500, 200, replace = TRUE)
cantidad <- sum(numeros >= 50 & numeros <= 450)
return(cantidad)
}
# Llamamos a la funcion
ejercicio_13()
ejercicio_13 <- function() {
#genera 200 numeros entre 1 y 500
numeros <- sample(1:500, 200, replace = TRUE)
cantidad <- sum(numeros >= 50 & numeros <= 450)
return(cantidad)
}
# Llamamos a la funcion
ejercicio_13()
ejercicio_13 <- function() {
#genera 200 numeros entre 1 y 500
numeros <- sample(1:500, 200, replace = TRUE)
cantidad <- sum(numeros >= 50 & numeros <= 450)
return(cantidad)
}
# Llamamos a la funcion
ejercicio_13()
costo_llamada <- function(t) {
if (t < 1) {
costo <- 0.4
} else {
costo <- 0.4 + (t-1)/4
}
return(costo)
}
costo_llamada(2)
traza.matriz <- function(A) {
n <- nrow(A)
traza <- 0
for (i in 1:n) {
traza <- traza + A[i,i]
}
return(traza)
}
x<-matrix(data=c(9, 3, 4,1, 3, -1,4, 12, -2),nrow=3,ncol = 3, byrow = T)
x
traza.matriz(x)
traza.matriz <- function(A) {
n <- nrow(A)
traza <- 0
for (i in 1:n) {
traza <- traza + A[i,i]
}
return(traza)
}
x<-matrix(data=c(9, 3, 4,1, 3, -1,4, 12, -2),nrow=3,ncol = 3, byrow = T)
traza.matriz(x)
traza.matriz <- function(A) {
filas <- nrow(A)
traza <- 0
for (i in 1:filas) {
traza <- traza + A[i,i]
}
return(traza)
}
x<-matrix(data=c(9, 3, 4,1, 3, -1,4, 12, -2),nrow=3,ncol = 3, byrow = T)
traza.matriz(x)
fibonacci <- function(n) {
if (n <= 0) {
return(NULL)
} else if (n == 1) {
return(0)
} else if (n == 2) {
return(c(0, 1))
} else {
fib <- c(0, 1)
for (i in 3:n) {
fib[i] <- fib[i-1] + fib[i-2]
}
return(fib)
}
}
fibonacci(10)
fibonacci <- function(n) {
if (n <= 0) {
return("")
} else if (n == 1) {
return(0)
} else if (n == 2) {
return(c(0, 1))
} else {
fibo <- c(0, 1)
for (i in 3:n) {
fibo[i] <- fibo[i-1] + fibo[i-2]
}
return(fib)
}
}
fibonacci(0)
fibonacci <- function(n) {
if (n <= 0) {
return("")
} else if (n == 1) {
return(0)
} else if (n == 2) {
return(c(0, 1))
} else {
fibo <- c(0, 1)
for (i in 3:n) {
fibo[i] <- fibo[i-1] + fibo[i-2]
}
return(fibo)
}
}
fibonacci(10)
mayor.cuadrado <- function(x) {
i <- 0
while (i^2 <= x) {
i <- i + 1
}
return((i-1)^2)
}
mayor.cuadrado(30)
mayor.cuadrado <- function(x) {
i <- 0
while (i^2 <= x) {
i <- i + 1
}
return((i)^2)
}
mayor.cuadrado(30)
datos_alumnos <- data.frame(
Nombre = c("Matias", "Alejandro", "Alexander", "Raquel", "Eduardo", "Sonia", "Juan", "Pablo", "Isaac", "Olga"),
Edad = c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
'Año de nacimiento' = 2023 - c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
'Número de teléfono' = c("65789431", "87654312", "76543891", "65456554", "89345632", "63549023", "73902345", "81230954", "63405623", "89645982"),
row.names = nombre)
datos_alumnos <- data.frame(
nombre = c("Matias", "Alejandro", "Alexander", "Raquel", "Eduardo", "Sonia", "Juan", "Pablo", "Isaac", "Olga"),
edad = c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Año_nacimiento = 2023 - c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Número_teléfono = c("65789431", "87654312", "76543891", "65456554", "89345632", "63549023", "73902345", "81230954", "63405623", "89645982"),
row.names = nombre)
datos_alumnos <- data.frame(
nombre = c("Matias", "Alejandro", "Alexander", "Raquel", "Eduardo", "Sonia", "Juan", "Pablo", "Isaac", "Olga"),
edad = c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Año_nacimiento = 2023 - c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Número_teléfono = c("65789431", "87654312", "76543891", "65456554", "89345632", "63549023", "73902345", "81230954", "63405623", "89645982"),
row.names = c("Matias", "Alejandro", "Alexander", "Raquel", "Eduardo", "Sonia", "Juan", "Pablo", "Isaac", "Olga"))
# Mostramos el DataFrame creado
print(datos_alumnos)
datos_alumnos <- data.frame(
nombre = c("Matias", "Alejandro", "Alexander", "Raquel", "Eduardo", "Sonia", "Juan", "Pablo", "Isaac", "Olga"),
edad = c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Año_nacimiento = 2023 - c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Número_teléfono = c("65789431", "87654312", "76543891", "65456554", "89345632", "63549023", "73902345", "81230954", "63405623", "89645982"),
row.names = c(nombre))
datos_alumnos <- data.frame(
nombre = c("Matias", "Alejandro", "Alexander", "Raquel", "Eduardo", "Sonia", "Juan", "Pablo", "Isaac", "Olga"),
edad = c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Año_nacimiento = 2023 - c(16, 17, 14, 15, 17, 18, 16, 15, 16, 18),
Número_teléfono = c("65789431", "87654312", "76543891", "65456554", "89345632", "63549023", "73902345", "81230954", "63405623", "89645982"),
row.names = c("Matias", "Alejandro", "Alexander", "Raquel", "Eduardo", "Sonia", "Juan", "Pablo", "Isaac", "Olga"))
# Mostramos el DataFrame creado
print(datos_alumnos)
perm_rep <- function(n, r) {
n^r
}
perm_rep(3,4)
ej.19.1 <- function(n, r) {
n^r
}
ej.19.1(3,4)
ej.19.1 <- function(n, r) {
n^r
}
ej.19.1(3,4)
ej.19.2<- function(n, r) {
factorial(n) / factorial(n-r)
}
ej.19.1(4,3)
ej.19.3 <- function(n, k) {
factorial(n) / prod(factorial(rep(n/k, k)))
}
ej.19.3(4,3)
ej.19.4 <- function(n, r) {
factorial(n) / (factorial(r) * factorial(n-r))
}
ej.19.4(4,3)
ej.19.5 <- function(n, r) {
comb(n+r-1, r)
}
ej.19.5(4,3)
ej.19.5 <- function(n, r) {
ej.19.5(n+r-1, r)
}
ej.19.5(4,3)
comb_rep <- function(n, r) {
comb(n+r-1, r)
}
comb_rep <- function(n, r) {
comb(n+r-1, r)
}
comb_rep(4,3)
comb_rep <- function(n, r) {
combs(n+r-1, r)
}
comb_rep(4,3)
comb_rep <- function(n, r) {
combs(n+r-1, r)
}
comb_rep(4,3)
ej.19.6 <- function(n, r) {
sum((-1)^k * choose(r,k) * (r-k)^n, k=0:r)
}
ej.19.6(4,3)
install.packages("gmp")
library(gmp)
ej.19.6 <- function(n, r) {
sum((-1)^k * choose(r,k) * (r-k)^n, k=0:r)
}
ej.19.6(4,3)
install.packages("gmp")
library(gmp)
#ej.19.6 <- function(n, r) {
#  sum((-1)^k * choose(r,k) * (r-k)^n, k=0:r)
#}
stirling2(4,3)
install.packages("gmp")
install.packages("gmp")
library(gmp)
#ej.19.6 <- function(n, r) {
#  sum((-1)^k * choose(r,k) * (r-k)^n, k=0:r)
#}
stirling2(4,3)
install.packages("gmp")
knitr::opts_chunk$set(echo = TRUE)
#ej.19.5 <- function(n, r) {
#combs(n+r-1, r)
#}
#ej.19.5(4,3)
install.packages("gmp")
#install.packages("gmp")
library(gmp)
stirling2(4,3)
Stirling2(4,3)
df<-data.frame(x=c(1:7), y=c(7:16))
df<-data.frame(x=c(1:7), y=c(7:14))
df<-data.frame(x=c(1:7), y=c(7:13))
divisibles.entre.3(df)
divisibles.entre.3 <- function(df) {
divisibles <- df %% 3 == 0
cant <- sum(divisibles)
return(cant)
}
df<-data.frame(x=c(1:7), y=c(7:13))
divisibles.entre.3(df)
df
divisibles.entre.3 <- function(df) {
divisibles <- df %% 3 == 0
cant <- sum(divisibles)
return(cant)
}
df<-data.frame(x=c(1:7), y=c(7:13))
divisibles.entre.3(df)
df<-data.frame(x=c(1:10), y=c(11:20))
covar <- cov(df[,col1], df[,col2])
cal.cov.cor <- function(df, col1, col2) {
var1 <- colnames(df)[col1]
var2 <- colnames(df)[col2]
covar <- cov(df[,col1], df[,col2])
correl <- cor(df[,col1], df[,col2])
return(list(variables = c(var1, var2), covarianza = covar, correlacion = correl))
}
df<-data.frame(x=c(1:10), y=c(11:20))
cal.cov.cor(df)
df<-data.frame(w=c(-9:0),x=c(1:10), y=c(11:20), z=c(21:30))
cal.cov.cor(df,1,2)
cal.cov.cor(df,3,2)
df<-data.frame(w=c(-9:0),x=c(1:10), y=c(11:20), z=c(21:30))
cal.cov.cor(df,2,3)
install.packages("readxl")
install.packages("readxl")
library(readxl)
Datos <- read_xlsx('EjemploAlgoritmosRecomendacion.xlsx')
install.packages("readxl")
library(readxl)
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
Datos <- read_xlsx('EjemploAlgoritmosRecomendacion.xlsx')
summary(Datos)
str(Datos)
install.packages("readxl")
#install.packages("readxl")
library(readxl)
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
Datos <- read_xlsx('EjemploAlgoritmosRecomendacion.xlsx')
summary(Datos)
str(Datos)
U<-function(n){
if(n==0) return(5)
if(n==1) return(-5)
if(n==2) return (2)
else return(4*U(N-1) - 15*U(n-2)+U(n-3))
}
U(2)
funcion <- function(x, n) {
if (n == 0) {
return(1)
} else if (n == 1) {
return(x)
} else if (n > 1) {
return(x * funcion(x, n-1))
}
}
funcion(2,5)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
datos <- read.csv("bosques_energia.csv", header = TRUE)
datos_tidy <- gather(datos, mes, valor, -nombre)
#====================================================
#25
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
datos <- read.csv("bosques_energia.csv", header = TRUE)
#====================================================
#25
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
datos <- read.csv("bosques_energia.csv", header = TRUE)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
datos
datos <- read.table("bosques_energia.csv", header = TRUE)
datos <- read.csv("bosques_energia.csv", header = TRUE)
datos
datos <- read.csv("bosques_energia.csv", header = TRUE,sep=',',dec=',')
datos
#====================================================
#25
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
datos <- read.csv("bosques_energia.csv", header = TRUE,sep=',',dec='.')
datos
#====================================================
#25
setwd("~/ALEJANDRO/1er Ciclo 2023/Mineria de Datos/Tarea 1/DatosTarea1")
datos <- read.csv("bosques_energia.csv",sep=',',dec='.')
datos
library(tidyr)
library(gather)
library(tidyr)
install.packages("tidyr", dependencies = T)
install.packages("tidyr", dependencies = T)
library(tidyr)
datos_tidy <- pivot_wider(
datos,
names_from = dia,
values_from = puntos
)
datos <- data.frame(
id     = c("A", "A", "A", "A", "B", "B", "B", "B"),
pais   = c("Costa Rica", "Colombia", "Costa Rica", "Honduras", "Colombia", "Colombia", "Honduras", "Honduras"),
dia    = c("dia1", "dia2", "dia3", "dia4", "dia1", "dia2", "dia3", "dia4"),
puntos = c(10, 20, 25, 10, 10, 50, 50, 25)
)
pivot_wider(
datos,
id_cols = id, # No toma en cuenta la variable pais
names_from = dia,
values_from = puntos
)
library(tidyr)
pivot_wider(
datos,
id_cols = id, # No toma en cuenta la variable pais
names_from = dia,
values_from = puntos
)
devtools::install_github("tidyverse/tidyr")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("tidyverse/tidyr")
devtools::install_github("tidyverse/tidyr")
install.packages("devtools")
devtools::install_github("tidyverse/tidyr")
library(devtools)
devtools::install_github("tidyverse/tidyr")
datos <- data.frame(
id     = c("A", "A", "A", "A", "B", "B", "B", "B"),
pais   = c("Costa Rica", "Colombia", "Costa Rica", "Honduras", "Colombia", "Colombia", "Honduras", "Honduras"),
dia    = c("dia1", "dia2", "dia3", "dia4", "dia1", "dia2", "dia3", "dia4"),
puntos = c(10, 20, 25, 10, 10, 50, 50, 25)
)
pivot_wider(
datos,
id_cols = id, # No toma en cuenta la variable pais
names_from = dia,
values_from = puntos
)
library(tidyr)
library(tidyr)
detach("package:grDevices", unload = TRUE)
library(devtools)
detach("package:devtools", unload = TRUE)
library(devtools)
detach("package:devtools", unload = TRUE)
install.packages(c("brew", "bslib", "cachem", "cli", "collections", "commonmark", "cpp11", "crayon", "curl", "data.table", "desc", "digest", "evaluate", "fansi", "fastmap", "filehash", "fontawesome", "formatR", "fs", "gridSVG", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "jpeg", "jsonlite", "JuliaCall", "katex", "knitr", "languageserver", "lintr", "magick", "markdown", "packrat", "pkgload", "png", "processx", "ps", "R.utils", "ragg", "Rcpp", "RcppTOML", "reticulate", "rgl", "rlang", "rmarkdown", "roxygen2", "rsconnect", "sass", "shiny", "sourcetools", "stringi", "styler", "sys", "targets", "tibble", "tikzDevice", "tinytex", "utf8", "V8", "webshot", "xfun", "XML", "xts", "yaml", "zoo"))
install.packages(c("brew", "bslib", "cachem", "cli", "collections", "commonmark", "cpp11", "crayon", "curl", "data.table", "desc", "digest", "evaluate", "fansi", "fastmap", "filehash", "fontawesome", "formatR", "fs", "gridSVG", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "jpeg", "jsonlite", "JuliaCall", "katex", "knitr", "languageserver", "lintr", "magick", "markdown", "packrat", "pkgload", "png", "processx", "ps", "R.utils", "ragg", "Rcpp", "RcppTOML", "reticulate", "rgl", "rlang", "rmarkdown", "roxygen2", "rsconnect", "sass", "shiny", "sourcetools", "stringi", "styler", "sys", "targets", "tibble", "tikzDevice", "tinytex", "utf8", "V8", "webshot", "xfun", "XML", "xts", "yaml", "zoo"))
library(tidyr)
install.packages("tidyr", dependencies = T)
install.packages("tidyr", dependencies = T)
install.packages("tidyr", dependencies = T)
install.packages("tidyr", dependencies = T)
library(tidyr)
datos <- data.frame(
id     = c("A", "A", "A", "A", "B", "B", "B", "B"),
pais   = c("Costa Rica", "Colombia", "Costa Rica", "Honduras", "Colombia", "Colombia", "Honduras", "Honduras"),
dia    = c("dia1", "dia2", "dia3", "dia4", "dia1", "dia2", "dia3", "dia4"),
puntos = c(10, 20, 25, 10, 10, 50, 50, 25)
)
pivot_wider(
datos,
id_cols = id, # No toma en cuenta la variable pais
names_from = dia,
values_from = puntos
)
pivot_longer(
datos,
cols = -id, # Toma todas menos id
names_to = "dia",
values_to = "puntos"
)
install.packages("tidyr", dependencies = T)
library(tidyr)
install.packages("tidyr", dependencies = T)
install.packages("tidyr", dependencies = T)
install.packages("tidyr", dependencies = T)
install.packages(c("bslib", "cachem", "cli", "collections", "commonmark", "cpp11", "crayon", "curl", "data.table", "desc", "digest", "evaluate", "fansi", "fastmap", "filehash", "fontawesome", "formatR", "fs", "gridSVG", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "jpeg", "jsonlite", "JuliaCall", "katex", "knitr", "languageserver", "lintr", "magick", "markdown", "packrat", "pkgload", "png", "processx", "ps", "R.utils", "ragg", "Rcpp", "RcppTOML", "reticulate", "rgl", "rlang", "rmarkdown", "roxygen2", "rsconnect", "sass", "shiny", "sourcetools", "stringi", "styler", "sys", "targets", "tibble", "tikzDevice", "tinytex", "utf8", "V8", "webshot", "xfun", "XML", "xts", "yaml", "zoo"))
install.packages(c("bslib", "cachem", "cli", "collections", "commonmark", "cpp11", "crayon", "curl", "data.table", "desc", "digest", "evaluate", "fansi", "fastmap", "filehash", "fontawesome", "formatR", "fs", "gridSVG", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "jpeg", "jsonlite", "JuliaCall", "katex", "knitr", "languageserver", "lintr", "magick", "markdown", "packrat", "pkgload", "png", "processx", "ps", "R.utils", "ragg", "Rcpp", "RcppTOML", "reticulate", "rgl", "rlang", "rmarkdown", "roxygen2", "rsconnect", "sass", "shiny", "sourcetools", "stringi", "styler", "sys", "targets", "tibble", "tikzDevice", "tinytex", "utf8", "V8", "webshot", "xfun", "XML", "xts", "yaml", "zoo"))
install.packages("cli")
install.packages("tidyr", dependencies = T)
install.packages("tidyr", dependencies = T)
library(tidyr)
library(cli)
detach("package:grDevices", unload = TRUE)
install.packages("cli")
install.packages("cli")
View(Datos)
